const userRouter = require('express').Router()
const User = require('../models/kayttaja')
const bcrypt = require('bcrypt')

userRouter.post('/', async (request, response) => {
    
    const { username, name, password } = request.body
    const userFinded = await User.findOne({username:username})

    if (password === undefined) {
      return response.status(400).json({ error: 'password is not to set' })
    } else if (password.length < 3) {
      return response.status(411).json({ error: 'password is too short' })
    } else if (userFinded) {
        return response.status(400).json({ error: 'username is already in use' })
    }
    

    const saltRounds = 10
    const passwordHash = await bcrypt.hash(password, saltRounds)
  
    const user = new User({
      username,
      name,
      passwordHash,
    })
    
    const savedUser = await user.save()
    response.status(201).json(savedUser)
  })
  
  userRouter.get('/', async (request, response) => {
    const users = await User.find({}).populate('blogs', {title: 1, author: 1, url: 1})
    response.status(200).json(users)
  })

  module.exports = userRouter
