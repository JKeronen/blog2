const blogRouter = require('express').Router()
const Blog = require('../models/postaus')
const User = require('../models/kayttaja')


blogRouter.get('/', async (request, response, next) => {
  const blogs = await Blog
    .find({}).populate('user', {username: 1, name: 1})
    response.json(blogs) 
})

blogRouter.post('/', async (request, response, next) => {
  const body = request.body

  // etsitään käyttäjä id:n avulla
  const user = await User.findById(body.userId)

  const blog = new Blog({
    title: body.title,
    author: body.author,
    user: user._id,
    url: body.url,
    likes: body.likes === undefined ? 0 : body.likes,
    
  })
  // tallennetaan blogi
  const saveNewBlog = await blog.save()
  
  // lisätään blogin id käyttäjälle
  user.blogs = user.blogs.concat(saveNewBlog._id)
  
  // tallennetaan käyttäjätiedot
  await user.save()
  // palatetaan tallennettu blogi
  response.json(saveNewBlog)
})

blogRouter.put('/:id', async (request, response, next) => {
  const blog = {
    title:request.body.title,
    author:request.body.author,
    url:request.body.url,
    likes:request.body.likes
  }
  await Blog.findByIdAndUpdate(request.body.id, blog)
  response.status(200).end()
})
blogRouter.delete('/:id', async (request, response, next) => {
  await Blog.findByIdAndRemove(request.params.id)
  response.status(204).end()
})

module.exports = blogRouter